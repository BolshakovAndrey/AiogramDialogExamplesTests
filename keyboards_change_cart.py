import operator

from aiogram import Bot, Dispatcher, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery

from aiogram_dialog import Window, Dialog, DialogRegistry, DialogManager, StartMode, ChatEvent
from aiogram_dialog.widgets.kbd import Button, Url, Column, Row, Group, ScrollingGroup, ManagedCheckboxAdapter, \
    Checkbox, Radio, Multiselect
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.text import Multi

storage = MemoryStorage()
token = "5832323088:AAH6wC9N4xmU8dm7z2nAGQj-phiTGnatmc4"
bot = Bot(token)
dp = Dispatcher(bot, storage=storage)
registry = DialogRegistry(dp)


# state.py
class MySG(StatesGroup):
    main = State()


# selected.py
async def check_changed(event: ChatEvent, checkbox: ManagedCheckboxAdapter, manager: DialogManager):
    print("Check status changed:", checkbox.is_checked())


# getters.py
async def get_data(**kwargs):
    fruits = [
        ("–í–∏—Ç–∞–º–∏–Ω –ê (1) —Ü–µ–Ω–∞ - 1000 ‚ÇΩ", '1'),
        ("–í–∏—Ç–∞–º–∏–Ω D (1) —Ü–µ–Ω–∞ - 1200 ‚ÇΩ", '2'),
        ("–í–∏—Ç–∞–º–∏–Ω E (1) —Ü–µ–Ω–∞ - 1500 ‚ÇΩ", '3'),
    ]
    return {
        "fruits": fruits,
        "count": len(fruits),
    }


# keyboards.py
fruits_kbd = Column(
    Radio(
        Format("‚òëÔ∏è{item[0]}"),  # E.g `üîò Apple`
        Format("üî≤Ô∏è {item[0]}"),
        id="r_fruits",
        item_id_getter=operator.itemgetter(0),
        items="fruits",
    )
)

row = Row(
    Button(Const(" ‚ûï 1Ô∏è‚É£ "), id="go", ),
    Button(Const("–£–±—Ä–∞—Ç—å üóëÔ∏è"), id="run", ),
    Button(Const(" ‚ûñ 1Ô∏è‚É£ "), id="fly"),

)

# __init__.py
dialog = Dialog(
    Window('''–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã üõí !
 
–î–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ ‚òëÔ∏è.
 
–î–ª—è –∏–∑–º–µ–Ω–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–∏–º–∞–π—Ç–µ ‚ûï 1Ô∏è‚É£  –∏–ª–∏  ‚ûñ 1Ô∏è‚É£
 
–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üóëÔ∏è.
 
–ó–∞—Ç–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è üÜó.
 
–û–±—â–∞—è —Å—É–º–º–∞: 3700 ‚ÇΩ
''',
           fruits_kbd,
           row,
           Button(Const("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è üÜó"), id="tele", ),
           Button(Const("–ù–∞–∑–∞–¥ üîö"), id="tele", ),
           Button(Const("–í –ö–∞—Ç–∞–ª–æ–≥ üíä"), id="tele",),
           state=MySG.main,
           getter=get_data,  # data getter
           )
)
registry.register(dialog)


@dp.message_handler(commands=["start"])
async def start(m: Message, dialog_manager: DialogManager):
    await dialog_manager.start(MySG.main, mode=StartMode.RESET_STACK)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
